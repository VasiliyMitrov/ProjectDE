# Functional String Processor

## Описание
Этот проект демонстрирует преобразование кода из императивного стиля в функциональный. Программа принимает список строк, отбирает те, чья длина больше 3, и преобразует их в верхний регистр.

## Задача
Оригинальный код был написан в императивном стиле, использовал изменяемые переменные и циклы. В данном проекте код переписан в функциональном стиле.

### Изменения:
1. Удалены изменяемые переменные.
2. Вместо цикла `for` использованы методы высшего порядка: `filter` и `map`.
3. Улучшена читаемость и декларативность.



object StringProcessor {
  // Переписали функцию в функциональном стиле
  def processStrings(strings: List[String]): List[String] = {
    // Вместо изменяемой переменной используем filter для отбора строк длиной более 3
    // и map для преобразования выбранных строк в верхний регистр
    strings.filter(_.length > 3).map(_.toUpperCase)
    // Удалили использование изменяемой переменной и цикла, так как методы filter и map обеспечивают тот же функционал декларативно
  }

  def main(args: Array[String]): Unit = {
    // Оставили оригинальный список строк для тестирования
    val strings = List("apple", "cat", "banana", "dog", "elephant")

    // Вызываем переписанную функцию
    val processedStrings = processStrings(strings)

    // Выводим результат
    println(s"Processed strings: $processedStrings")
  }
}